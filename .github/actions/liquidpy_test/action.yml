name: Liquidpy Test Run

inputs:
  python_version:
    description: 'Python version'
  jinja2_version:
    description: 'Jinja2 version'

runs:
  using: "composite"
  steps:
    - name: Set up Python (${{ inputs.python_version }})
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Install dependencies
      shell: bash
      run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry config virtualenvs.create false
          poetry install -v
          poetry install -E extra
          # reinstall pandas to specific version
          pip install ${{ inputs.jinja2_version }}

    - name: Test with pytest
      shell: bash
      run: pytest tests/ --junitxml=junit/test-results-${{ inputs.python-version }}-${{ inputs.jinja2_version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ inputs.python-version }}-${{ inputs.jinja2_version }}
        path: junit/test-results-${{ inputs.python-version }}-${{ inputs.jinja2_version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
